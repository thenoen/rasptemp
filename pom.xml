<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>sk.thenoen.rasptemp</groupId>
	<artifactId>rasptemp</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>RaspTemp</name>
	<description>Raspberry temperature monitoring</description>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.3.6.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<java.version>1.7</java.version>
		<frontend.skip>false</frontend.skip>
		<deltaspike.version>1.5.1</deltaspike.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>org.hsqldb</groupId>
			<artifactId>hsqldb</artifactId>
			<scope>runtime</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-clean-plugin</artifactId>
				<version>3.0.0</version>
				<configuration>
					<filesets> <!-- this is out app -->
						<fileset>
							<directory>src/main/frontend/js/app/build</directory>
						</fileset>
						<fileset> <!-- this is where we copy our resources (deps + app) -->
							<directory>src/main/webapp/js</directory>
						</fileset>
						<!-- not deleted for time it can take
						<fileset>
						  <directory>src/main/frontend/node_modules</directory>
						</fileset>
						-->
					</filesets>
				</configuration>
			</plugin>

			<plugin>
				<groupId>com.github.eirslett</groupId>
				<artifactId>frontend-maven-plugin</artifactId>
				<version>0.0.27</version>
				<executions>
					<execution>
						<id>install-node-and-npm</id>
						<phase>generate-resources</phase>
						<goals>
							<goal>install-node-and-npm</goal>
						</goals>
						<configuration>
							<nodeVersion>v6.3.0</nodeVersion>
							<npmVersion>3.10.5</npmVersion>
						</configuration>
					</execution>
					<execution>
						<id>npm-install</id>
						<phase>generate-resources</phase>
						<goals>
							<goal>npm</goal>
						</goals>
						<configuration> <!-- this is the default args but just to make it explicit -->
							<arguments>install</arguments>
						</configuration>
					</execution>
					<execution>
						<id>gulp-build</id>
						<goals>
							<goal>gulp</goal>
						</goals>
						<phase>generate-resources</phase>
					</execution>
				</executions>
				<configuration>
					<installDirectory>node-installation-dir</installDirectory>
					<workingDirectory>src/main/frontend/js/app</workingDirectory>
					<skip>${frontend.skip}</skip>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.7</version>
				<executions>
					<execution>
						<id>copy-frontend-resources</id>
						<phase>generate-resources</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.basedir}/src/main/resources/static/js/node_modules</outputDirectory>
							<resources>
								<resource>
									<directory>src/main/frontend/js/app/node_modules</directory>
									<!--<includes>-->
										<!--<include>angular2/bundles/angular2-polyfills.min.js</include>-->
										<!--<include>angular2/bundles/angular2.min.js</include>-->
										<!--<include>angular2/bundles/angular2.js</include> &lt;!&ndash; todo: rmove &ndash;&gt;-->
										<!--<include>angular2/bundles/http.min.js</include>-->
										<!--<include>angular2/bundles/router.min.js</include>-->
										<!--<include>angular2/bundles/upgrade.min.js</include>-->
										<!--<include>rxjs/bundles/Rx.min.js</include>-->
										<!--<include>systemjs/dist/system.js</include>-->
										<!-- TODO: filter more these 2
										<include>es6-promise/**/*.js</include>
										<include>es6-shim/**/*.js</include>
										 -->
									<!--</includes>-->
								</resource>
								<!--<resources>-->
									<!--<resource>-->
										<!--<directory>src/main/resources/static</directory>-->
									<!--</resource>-->
								<!--</resources>-->
							</resources>
						</configuration>
					</execution>
					<execution>
						<id>copy-app.js</id>
						<phase>generate-resources</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.basedir}/src/main/resources/static/js/app</outputDirectory>
							<resources>
								<resource>
									<directory>src/main/frontend/js/app/build/js</directory>
									<includes>
										<include>app.js</include>
									</includes>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
				<configuration>
					<encoding>UTF-8</encoding>
				</configuration>
			</plugin>
		</plugins>
	</build>


</project>
